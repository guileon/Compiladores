Terminals unused in grammar

   TOKEN_ERROR


Grammar

    0 $accept: START $end

    1 START: PROG

    2 PROG: DECLARATION PROG
    3     | FUNC_DECLARATION PROG
    4     | /* empty */

    5 LIST: LITERAL LIST
    6     | /* empty */

    7 TYPE: KW_BOOL
    8     | KW_WORD
    9     | KW_BYTE

   10 IDENTIFIER: TK_IDENTIFIER

   11 LITERAL: LIT_INTEGER
   12        | LIT_FALSE
   13        | LIT_TRUE
   14        | LIT_STRING
   15        | LIT_CHAR

   16 DECLARATION: TYPE IDENTIFIER ':' LITERAL ';'
   17            | TYPE '$' IDENTIFIER ':' LITERAL ';'
   18            | TYPE IDENTIFIER '[' EXPRESSION ']' ':' LIST ';'
   19            | TYPE IDENTIFIER '[' EXPRESSION ']' ';'

   20 DECLARATION_WO_VEC: TYPE IDENTIFIER ':' LITERAL ';' DECLARATION_WO_VEC
   21                   | TYPE '$' IDENTIFIER ':' LITERAL ';' DECLARATION_WO_VEC
   22                   | /* empty */

   23 FUNC_DECLARATION: TYPE IDENTIFIER '(' ARGUMENTS ')' DECLARATION_WO_VEC BLOCK
   24                 | TYPE IDENTIFIER '(' ')' DECLARATION_WO_VEC BLOCK

   25 ARGUMENTS: TYPE IDENTIFIER
   26          | TYPE IDENTIFIER ',' ARGUMENTS

   27 ARGUMENTS_CALL: EXPRESSION
   28               | EXPRESSION ',' ARGUMENTS_CALL
   29               | /* empty */

   30 EXPRESSION: IDENTIFIER
   31           | IDENTIFIER '[' EXPRESSION ']'
   32           | '&' IDENTIFIER
   33           | '*' IDENTIFIER
   34           | LITERAL
   35           | '(' EXPRESSION ')'
   36           | EXPRESSION '*' EXPRESSION
   37           | EXPRESSION '+' EXPRESSION
   38           | EXPRESSION '/' EXPRESSION
   39           | EXPRESSION '-' EXPRESSION
   40           | IDENTIFIER '(' ARGUMENTS_CALL ')'
   41           | EXPRESSION OPERATOR_OR EXPRESSION
   42           | EXPRESSION OPERATOR_AND EXPRESSION
   43           | EXPRESSION OPERATOR_LE EXPRESSION
   44           | EXPRESSION OPERATOR_GE EXPRESSION
   45           | EXPRESSION OPERATOR_EQ EXPRESSION
   46           | EXPRESSION OPERATOR_NE EXPRESSION
   47           | EXPRESSION '<' EXPRESSION
   48           | EXPRESSION '>' EXPRESSION

   49 BLOCK: '{' CMD_SEQ '}'

   50 OUTPUT: EXPRESSION
   51       | EXPRESSION ',' OUTPUT

   52 CMD: IDENTIFIER '=' EXPRESSION
   53    | IDENTIFIER '[' EXPRESSION ']' '=' EXPRESSION
   54    | '*' IDENTIFIER '=' EXPRESSION
   55    | KW_INPUT IDENTIFIER
   56    | KW_OUTPUT OUTPUT
   57    | KW_RETURN EXPRESSION
   58    | BLOCK
   59    | KW_IF '(' EXPRESSION ')' KW_THEN CMD
   60    | KW_IF '(' EXPRESSION ')' KW_THEN CMD KW_ELSE CMD
   61    | KW_LOOP '(' EXPRESSION ')' CMD

   62 CMD_SEQ: CMD ';' CMD_SEQ
   63        | /* empty */


Terminals, with rules where they appear

$end (0) 0
'$' (36) 17 21
'&' (38) 32
'(' (40) 23 24 35 40 59 60 61
')' (41) 23 24 35 40 59 60 61
'*' (42) 33 36 54
'+' (43) 37
',' (44) 26 28 51
'-' (45) 39
'/' (47) 38
':' (58) 16 17 18 20 21
';' (59) 16 17 18 19 20 21 62
'<' (60) 47
'=' (61) 52 53 54
'>' (62) 48
'[' (91) 18 19 31 53
']' (93) 18 19 31 53
'{' (123) 49
'}' (125) 49
error (256)
KW_WORD (258) 8
KW_BOOL (259) 7
KW_BYTE (260) 9
KW_IF (261) 59 60
KW_THEN (262) 59 60
KW_ELSE (263) 60
KW_LOOP (264) 61
KW_INPUT (265) 55
KW_RETURN (266) 57
KW_OUTPUT (267) 56
OPERATOR_LE (268) 43
OPERATOR_GE (269) 44
OPERATOR_EQ (270) 45
OPERATOR_NE (271) 46
OPERATOR_AND (272) 42
OPERATOR_OR (273) 41
TK_IDENTIFIER (274) 10
LIT_INTEGER (275) 11
LIT_FALSE (276) 12
LIT_TRUE (277) 13
LIT_CHAR (278) 15
LIT_STRING (279) 14
TOKEN_ERROR (280)
IFX (281)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
START (46)
    on left: 1, on right: 0
PROG (47)
    on left: 2 3 4, on right: 1 2 3
LIST (48)
    on left: 5 6, on right: 5 18
TYPE (49)
    on left: 7 8 9, on right: 16 17 18 19 20 21 23 24 25 26
IDENTIFIER (50)
    on left: 10, on right: 16 17 18 19 20 21 23 24 25 26 30 31 32 33
    40 52 53 54 55
LITERAL (51)
    on left: 11 12 13 14 15, on right: 5 16 17 20 21 34
DECLARATION (52)
    on left: 16 17 18 19, on right: 2
DECLARATION_WO_VEC (53)
    on left: 20 21 22, on right: 20 21 23 24
FUNC_DECLARATION (54)
    on left: 23 24, on right: 3
ARGUMENTS (55)
    on left: 25 26, on right: 23 26
ARGUMENTS_CALL (56)
    on left: 27 28 29, on right: 28 40
EXPRESSION (57)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
    48, on right: 18 19 27 28 31 35 36 37 38 39 41 42 43 44 45 46 47
    48 50 51 52 53 54 57 59 60 61
BLOCK (58)
    on left: 49, on right: 23 24 58
OUTPUT (59)
    on left: 50 51, on right: 51 56
CMD (60)
    on left: 52 53 54 55 56 57 58 59 60 61, on right: 59 60 61 62
CMD_SEQ (61)
    on left: 62 63, on right: 49 62


state 0

    0 $accept: . START $end

    KW_WORD  shift, and go to state 1
    KW_BOOL  shift, and go to state 2
    KW_BYTE  shift, and go to state 3

    $default  reduce using rule 4 (PROG)

    START             go to state 4
    PROG              go to state 5
    TYPE              go to state 6
    DECLARATION       go to state 7
    FUNC_DECLARATION  go to state 8


state 1

    8 TYPE: KW_WORD .

    $default  reduce using rule 8 (TYPE)


state 2

    7 TYPE: KW_BOOL .

    $default  reduce using rule 7 (TYPE)


state 3

    9 TYPE: KW_BYTE .

    $default  reduce using rule 9 (TYPE)


state 4

    0 $accept: START . $end

    $end  shift, and go to state 9


state 5

    1 START: PROG .

    $default  reduce using rule 1 (START)


state 6

   16 DECLARATION: TYPE . IDENTIFIER ':' LITERAL ';'
   17            | TYPE . '$' IDENTIFIER ':' LITERAL ';'
   18            | TYPE . IDENTIFIER '[' EXPRESSION ']' ':' LIST ';'
   19            | TYPE . IDENTIFIER '[' EXPRESSION ']' ';'
   23 FUNC_DECLARATION: TYPE . IDENTIFIER '(' ARGUMENTS ')' DECLARATION_WO_VEC BLOCK
   24                 | TYPE . IDENTIFIER '(' ')' DECLARATION_WO_VEC BLOCK

    TK_IDENTIFIER  shift, and go to state 10
    '$'            shift, and go to state 11

    IDENTIFIER  go to state 12


state 7

    2 PROG: DECLARATION . PROG

    KW_WORD  shift, and go to state 1
    KW_BOOL  shift, and go to state 2
    KW_BYTE  shift, and go to state 3

    $default  reduce using rule 4 (PROG)

    PROG              go to state 13
    TYPE              go to state 6
    DECLARATION       go to state 7
    FUNC_DECLARATION  go to state 8


state 8

    3 PROG: FUNC_DECLARATION . PROG

    KW_WORD  shift, and go to state 1
    KW_BOOL  shift, and go to state 2
    KW_BYTE  shift, and go to state 3

    $default  reduce using rule 4 (PROG)

    PROG              go to state 14
    TYPE              go to state 6
    DECLARATION       go to state 7
    FUNC_DECLARATION  go to state 8


state 9

    0 $accept: START $end .

    $default  accept


state 10

   10 IDENTIFIER: TK_IDENTIFIER .

    $default  reduce using rule 10 (IDENTIFIER)


state 11

   17 DECLARATION: TYPE '$' . IDENTIFIER ':' LITERAL ';'

    TK_IDENTIFIER  shift, and go to state 10

    IDENTIFIER  go to state 15


state 12

   16 DECLARATION: TYPE IDENTIFIER . ':' LITERAL ';'
   18            | TYPE IDENTIFIER . '[' EXPRESSION ']' ':' LIST ';'
   19            | TYPE IDENTIFIER . '[' EXPRESSION ']' ';'
   23 FUNC_DECLARATION: TYPE IDENTIFIER . '(' ARGUMENTS ')' DECLARATION_WO_VEC BLOCK
   24                 | TYPE IDENTIFIER . '(' ')' DECLARATION_WO_VEC BLOCK

    ':'  shift, and go to state 16
    '['  shift, and go to state 17
    '('  shift, and go to state 18


state 13

    2 PROG: DECLARATION PROG .

    $default  reduce using rule 2 (PROG)


state 14

    3 PROG: FUNC_DECLARATION PROG .

    $default  reduce using rule 3 (PROG)


state 15

   17 DECLARATION: TYPE '$' IDENTIFIER . ':' LITERAL ';'

    ':'  shift, and go to state 19


state 16

   16 DECLARATION: TYPE IDENTIFIER ':' . LITERAL ';'

    LIT_INTEGER  shift, and go to state 20
    LIT_FALSE    shift, and go to state 21
    LIT_TRUE     shift, and go to state 22
    LIT_CHAR     shift, and go to state 23
    LIT_STRING   shift, and go to state 24

    LITERAL  go to state 25


state 17

   18 DECLARATION: TYPE IDENTIFIER '[' . EXPRESSION ']' ':' LIST ';'
   19            | TYPE IDENTIFIER '[' . EXPRESSION ']' ';'

    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '*'            shift, and go to state 26
    '('            shift, and go to state 27
    '&'            shift, and go to state 28

    IDENTIFIER  go to state 29
    LITERAL     go to state 30
    EXPRESSION  go to state 31


state 18

   23 FUNC_DECLARATION: TYPE IDENTIFIER '(' . ARGUMENTS ')' DECLARATION_WO_VEC BLOCK
   24                 | TYPE IDENTIFIER '(' . ')' DECLARATION_WO_VEC BLOCK

    KW_WORD  shift, and go to state 1
    KW_BOOL  shift, and go to state 2
    KW_BYTE  shift, and go to state 3
    ')'      shift, and go to state 32

    TYPE       go to state 33
    ARGUMENTS  go to state 34


state 19

   17 DECLARATION: TYPE '$' IDENTIFIER ':' . LITERAL ';'

    LIT_INTEGER  shift, and go to state 20
    LIT_FALSE    shift, and go to state 21
    LIT_TRUE     shift, and go to state 22
    LIT_CHAR     shift, and go to state 23
    LIT_STRING   shift, and go to state 24

    LITERAL  go to state 35


state 20

   11 LITERAL: LIT_INTEGER .

    $default  reduce using rule 11 (LITERAL)


state 21

   12 LITERAL: LIT_FALSE .

    $default  reduce using rule 12 (LITERAL)


state 22

   13 LITERAL: LIT_TRUE .

    $default  reduce using rule 13 (LITERAL)


state 23

   15 LITERAL: LIT_CHAR .

    $default  reduce using rule 15 (LITERAL)


state 24

   14 LITERAL: LIT_STRING .

    $default  reduce using rule 14 (LITERAL)


state 25

   16 DECLARATION: TYPE IDENTIFIER ':' LITERAL . ';'

    ';'  shift, and go to state 36


state 26

   33 EXPRESSION: '*' . IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 10

    IDENTIFIER  go to state 37


state 27

   35 EXPRESSION: '(' . EXPRESSION ')'

    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '*'            shift, and go to state 26
    '('            shift, and go to state 27
    '&'            shift, and go to state 28

    IDENTIFIER  go to state 29
    LITERAL     go to state 30
    EXPRESSION  go to state 38


state 28

   32 EXPRESSION: '&' . IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 10

    IDENTIFIER  go to state 39


state 29

   30 EXPRESSION: IDENTIFIER .
   31           | IDENTIFIER . '[' EXPRESSION ']'
   40           | IDENTIFIER . '(' ARGUMENTS_CALL ')'

    '['  shift, and go to state 40
    '('  shift, and go to state 41

    $default  reduce using rule 30 (EXPRESSION)


state 30

   34 EXPRESSION: LITERAL .

    $default  reduce using rule 34 (EXPRESSION)


state 31

   18 DECLARATION: TYPE IDENTIFIER '[' EXPRESSION . ']' ':' LIST ';'
   19            | TYPE IDENTIFIER '[' EXPRESSION . ']' ';'
   36 EXPRESSION: EXPRESSION . '*' EXPRESSION
   37           | EXPRESSION . '+' EXPRESSION
   38           | EXPRESSION . '/' EXPRESSION
   39           | EXPRESSION . '-' EXPRESSION
   41           | EXPRESSION . OPERATOR_OR EXPRESSION
   42           | EXPRESSION . OPERATOR_AND EXPRESSION
   43           | EXPRESSION . OPERATOR_LE EXPRESSION
   44           | EXPRESSION . OPERATOR_GE EXPRESSION
   45           | EXPRESSION . OPERATOR_EQ EXPRESSION
   46           | EXPRESSION . OPERATOR_NE EXPRESSION
   47           | EXPRESSION . '<' EXPRESSION
   48           | EXPRESSION . '>' EXPRESSION

    OPERATOR_LE   shift, and go to state 42
    OPERATOR_GE   shift, and go to state 43
    OPERATOR_EQ   shift, and go to state 44
    OPERATOR_NE   shift, and go to state 45
    OPERATOR_AND  shift, and go to state 46
    OPERATOR_OR   shift, and go to state 47
    '<'           shift, and go to state 48
    '>'           shift, and go to state 49
    '+'           shift, and go to state 50
    '-'           shift, and go to state 51
    '*'           shift, and go to state 52
    '/'           shift, and go to state 53
    ']'           shift, and go to state 54


state 32

   24 FUNC_DECLARATION: TYPE IDENTIFIER '(' ')' . DECLARATION_WO_VEC BLOCK

    KW_WORD  shift, and go to state 1
    KW_BOOL  shift, and go to state 2
    KW_BYTE  shift, and go to state 3

    $default  reduce using rule 22 (DECLARATION_WO_VEC)

    TYPE                go to state 55
    DECLARATION_WO_VEC  go to state 56


state 33

   25 ARGUMENTS: TYPE . IDENTIFIER
   26          | TYPE . IDENTIFIER ',' ARGUMENTS

    TK_IDENTIFIER  shift, and go to state 10

    IDENTIFIER  go to state 57


state 34

   23 FUNC_DECLARATION: TYPE IDENTIFIER '(' ARGUMENTS . ')' DECLARATION_WO_VEC BLOCK

    ')'  shift, and go to state 58


state 35

   17 DECLARATION: TYPE '$' IDENTIFIER ':' LITERAL . ';'

    ';'  shift, and go to state 59


state 36

   16 DECLARATION: TYPE IDENTIFIER ':' LITERAL ';' .

    $default  reduce using rule 16 (DECLARATION)


state 37

   33 EXPRESSION: '*' IDENTIFIER .

    $default  reduce using rule 33 (EXPRESSION)


state 38

   35 EXPRESSION: '(' EXPRESSION . ')'
   36           | EXPRESSION . '*' EXPRESSION
   37           | EXPRESSION . '+' EXPRESSION
   38           | EXPRESSION . '/' EXPRESSION
   39           | EXPRESSION . '-' EXPRESSION
   41           | EXPRESSION . OPERATOR_OR EXPRESSION
   42           | EXPRESSION . OPERATOR_AND EXPRESSION
   43           | EXPRESSION . OPERATOR_LE EXPRESSION
   44           | EXPRESSION . OPERATOR_GE EXPRESSION
   45           | EXPRESSION . OPERATOR_EQ EXPRESSION
   46           | EXPRESSION . OPERATOR_NE EXPRESSION
   47           | EXPRESSION . '<' EXPRESSION
   48           | EXPRESSION . '>' EXPRESSION

    OPERATOR_LE   shift, and go to state 42
    OPERATOR_GE   shift, and go to state 43
    OPERATOR_EQ   shift, and go to state 44
    OPERATOR_NE   shift, and go to state 45
    OPERATOR_AND  shift, and go to state 46
    OPERATOR_OR   shift, and go to state 47
    '<'           shift, and go to state 48
    '>'           shift, and go to state 49
    '+'           shift, and go to state 50
    '-'           shift, and go to state 51
    '*'           shift, and go to state 52
    '/'           shift, and go to state 53
    ')'           shift, and go to state 60


state 39

   32 EXPRESSION: '&' IDENTIFIER .

    $default  reduce using rule 32 (EXPRESSION)


state 40

   31 EXPRESSION: IDENTIFIER '[' . EXPRESSION ']'

    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '*'            shift, and go to state 26
    '('            shift, and go to state 27
    '&'            shift, and go to state 28

    IDENTIFIER  go to state 29
    LITERAL     go to state 30
    EXPRESSION  go to state 61


state 41

   40 EXPRESSION: IDENTIFIER '(' . ARGUMENTS_CALL ')'

    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '*'            shift, and go to state 26
    '('            shift, and go to state 27
    '&'            shift, and go to state 28

    $default  reduce using rule 29 (ARGUMENTS_CALL)

    IDENTIFIER      go to state 29
    LITERAL         go to state 30
    ARGUMENTS_CALL  go to state 62
    EXPRESSION      go to state 63


state 42

   43 EXPRESSION: EXPRESSION OPERATOR_LE . EXPRESSION

    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '*'            shift, and go to state 26
    '('            shift, and go to state 27
    '&'            shift, and go to state 28

    IDENTIFIER  go to state 29
    LITERAL     go to state 30
    EXPRESSION  go to state 64


state 43

   44 EXPRESSION: EXPRESSION OPERATOR_GE . EXPRESSION

    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '*'            shift, and go to state 26
    '('            shift, and go to state 27
    '&'            shift, and go to state 28

    IDENTIFIER  go to state 29
    LITERAL     go to state 30
    EXPRESSION  go to state 65


state 44

   45 EXPRESSION: EXPRESSION OPERATOR_EQ . EXPRESSION

    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '*'            shift, and go to state 26
    '('            shift, and go to state 27
    '&'            shift, and go to state 28

    IDENTIFIER  go to state 29
    LITERAL     go to state 30
    EXPRESSION  go to state 66


state 45

   46 EXPRESSION: EXPRESSION OPERATOR_NE . EXPRESSION

    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '*'            shift, and go to state 26
    '('            shift, and go to state 27
    '&'            shift, and go to state 28

    IDENTIFIER  go to state 29
    LITERAL     go to state 30
    EXPRESSION  go to state 67


state 46

   42 EXPRESSION: EXPRESSION OPERATOR_AND . EXPRESSION

    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '*'            shift, and go to state 26
    '('            shift, and go to state 27
    '&'            shift, and go to state 28

    IDENTIFIER  go to state 29
    LITERAL     go to state 30
    EXPRESSION  go to state 68


state 47

   41 EXPRESSION: EXPRESSION OPERATOR_OR . EXPRESSION

    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '*'            shift, and go to state 26
    '('            shift, and go to state 27
    '&'            shift, and go to state 28

    IDENTIFIER  go to state 29
    LITERAL     go to state 30
    EXPRESSION  go to state 69


state 48

   47 EXPRESSION: EXPRESSION '<' . EXPRESSION

    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '*'            shift, and go to state 26
    '('            shift, and go to state 27
    '&'            shift, and go to state 28

    IDENTIFIER  go to state 29
    LITERAL     go to state 30
    EXPRESSION  go to state 70


state 49

   48 EXPRESSION: EXPRESSION '>' . EXPRESSION

    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '*'            shift, and go to state 26
    '('            shift, and go to state 27
    '&'            shift, and go to state 28

    IDENTIFIER  go to state 29
    LITERAL     go to state 30
    EXPRESSION  go to state 71


state 50

   37 EXPRESSION: EXPRESSION '+' . EXPRESSION

    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '*'            shift, and go to state 26
    '('            shift, and go to state 27
    '&'            shift, and go to state 28

    IDENTIFIER  go to state 29
    LITERAL     go to state 30
    EXPRESSION  go to state 72


state 51

   39 EXPRESSION: EXPRESSION '-' . EXPRESSION

    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '*'            shift, and go to state 26
    '('            shift, and go to state 27
    '&'            shift, and go to state 28

    IDENTIFIER  go to state 29
    LITERAL     go to state 30
    EXPRESSION  go to state 73


state 52

   36 EXPRESSION: EXPRESSION '*' . EXPRESSION

    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '*'            shift, and go to state 26
    '('            shift, and go to state 27
    '&'            shift, and go to state 28

    IDENTIFIER  go to state 29
    LITERAL     go to state 30
    EXPRESSION  go to state 74


state 53

   38 EXPRESSION: EXPRESSION '/' . EXPRESSION

    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '*'            shift, and go to state 26
    '('            shift, and go to state 27
    '&'            shift, and go to state 28

    IDENTIFIER  go to state 29
    LITERAL     go to state 30
    EXPRESSION  go to state 75


state 54

   18 DECLARATION: TYPE IDENTIFIER '[' EXPRESSION ']' . ':' LIST ';'
   19            | TYPE IDENTIFIER '[' EXPRESSION ']' . ';'

    ':'  shift, and go to state 76
    ';'  shift, and go to state 77


state 55

   20 DECLARATION_WO_VEC: TYPE . IDENTIFIER ':' LITERAL ';' DECLARATION_WO_VEC
   21                   | TYPE . '$' IDENTIFIER ':' LITERAL ';' DECLARATION_WO_VEC

    TK_IDENTIFIER  shift, and go to state 10
    '$'            shift, and go to state 78

    IDENTIFIER  go to state 79


state 56

   24 FUNC_DECLARATION: TYPE IDENTIFIER '(' ')' DECLARATION_WO_VEC . BLOCK

    '{'  shift, and go to state 80

    BLOCK  go to state 81


state 57

   25 ARGUMENTS: TYPE IDENTIFIER .
   26          | TYPE IDENTIFIER . ',' ARGUMENTS

    ','  shift, and go to state 82

    $default  reduce using rule 25 (ARGUMENTS)


state 58

   23 FUNC_DECLARATION: TYPE IDENTIFIER '(' ARGUMENTS ')' . DECLARATION_WO_VEC BLOCK

    KW_WORD  shift, and go to state 1
    KW_BOOL  shift, and go to state 2
    KW_BYTE  shift, and go to state 3

    $default  reduce using rule 22 (DECLARATION_WO_VEC)

    TYPE                go to state 55
    DECLARATION_WO_VEC  go to state 83


state 59

   17 DECLARATION: TYPE '$' IDENTIFIER ':' LITERAL ';' .

    $default  reduce using rule 17 (DECLARATION)


state 60

   35 EXPRESSION: '(' EXPRESSION ')' .

    $default  reduce using rule 35 (EXPRESSION)


state 61

   31 EXPRESSION: IDENTIFIER '[' EXPRESSION . ']'
   36           | EXPRESSION . '*' EXPRESSION
   37           | EXPRESSION . '+' EXPRESSION
   38           | EXPRESSION . '/' EXPRESSION
   39           | EXPRESSION . '-' EXPRESSION
   41           | EXPRESSION . OPERATOR_OR EXPRESSION
   42           | EXPRESSION . OPERATOR_AND EXPRESSION
   43           | EXPRESSION . OPERATOR_LE EXPRESSION
   44           | EXPRESSION . OPERATOR_GE EXPRESSION
   45           | EXPRESSION . OPERATOR_EQ EXPRESSION
   46           | EXPRESSION . OPERATOR_NE EXPRESSION
   47           | EXPRESSION . '<' EXPRESSION
   48           | EXPRESSION . '>' EXPRESSION

    OPERATOR_LE   shift, and go to state 42
    OPERATOR_GE   shift, and go to state 43
    OPERATOR_EQ   shift, and go to state 44
    OPERATOR_NE   shift, and go to state 45
    OPERATOR_AND  shift, and go to state 46
    OPERATOR_OR   shift, and go to state 47
    '<'           shift, and go to state 48
    '>'           shift, and go to state 49
    '+'           shift, and go to state 50
    '-'           shift, and go to state 51
    '*'           shift, and go to state 52
    '/'           shift, and go to state 53
    ']'           shift, and go to state 84


state 62

   40 EXPRESSION: IDENTIFIER '(' ARGUMENTS_CALL . ')'

    ')'  shift, and go to state 85


state 63

   27 ARGUMENTS_CALL: EXPRESSION .
   28               | EXPRESSION . ',' ARGUMENTS_CALL
   36 EXPRESSION: EXPRESSION . '*' EXPRESSION
   37           | EXPRESSION . '+' EXPRESSION
   38           | EXPRESSION . '/' EXPRESSION
   39           | EXPRESSION . '-' EXPRESSION
   41           | EXPRESSION . OPERATOR_OR EXPRESSION
   42           | EXPRESSION . OPERATOR_AND EXPRESSION
   43           | EXPRESSION . OPERATOR_LE EXPRESSION
   44           | EXPRESSION . OPERATOR_GE EXPRESSION
   45           | EXPRESSION . OPERATOR_EQ EXPRESSION
   46           | EXPRESSION . OPERATOR_NE EXPRESSION
   47           | EXPRESSION . '<' EXPRESSION
   48           | EXPRESSION . '>' EXPRESSION

    OPERATOR_LE   shift, and go to state 42
    OPERATOR_GE   shift, and go to state 43
    OPERATOR_EQ   shift, and go to state 44
    OPERATOR_NE   shift, and go to state 45
    OPERATOR_AND  shift, and go to state 46
    OPERATOR_OR   shift, and go to state 47
    '<'           shift, and go to state 48
    '>'           shift, and go to state 49
    '+'           shift, and go to state 50
    '-'           shift, and go to state 51
    '*'           shift, and go to state 52
    '/'           shift, and go to state 53
    ','           shift, and go to state 86

    $default  reduce using rule 27 (ARGUMENTS_CALL)


state 64

   36 EXPRESSION: EXPRESSION . '*' EXPRESSION
   37           | EXPRESSION . '+' EXPRESSION
   38           | EXPRESSION . '/' EXPRESSION
   39           | EXPRESSION . '-' EXPRESSION
   41           | EXPRESSION . OPERATOR_OR EXPRESSION
   42           | EXPRESSION . OPERATOR_AND EXPRESSION
   43           | EXPRESSION . OPERATOR_LE EXPRESSION
   43           | EXPRESSION OPERATOR_LE EXPRESSION .
   44           | EXPRESSION . OPERATOR_GE EXPRESSION
   45           | EXPRESSION . OPERATOR_EQ EXPRESSION
   46           | EXPRESSION . OPERATOR_NE EXPRESSION
   47           | EXPRESSION . '<' EXPRESSION
   48           | EXPRESSION . '>' EXPRESSION

    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53

    OPERATOR_LE   error (nonassociative)
    OPERATOR_GE   error (nonassociative)
    OPERATOR_EQ   error (nonassociative)
    OPERATOR_NE   error (nonassociative)
    OPERATOR_AND  error (nonassociative)
    OPERATOR_OR   error (nonassociative)
    '<'           error (nonassociative)
    '>'           error (nonassociative)

    $default  reduce using rule 43 (EXPRESSION)


state 65

   36 EXPRESSION: EXPRESSION . '*' EXPRESSION
   37           | EXPRESSION . '+' EXPRESSION
   38           | EXPRESSION . '/' EXPRESSION
   39           | EXPRESSION . '-' EXPRESSION
   41           | EXPRESSION . OPERATOR_OR EXPRESSION
   42           | EXPRESSION . OPERATOR_AND EXPRESSION
   43           | EXPRESSION . OPERATOR_LE EXPRESSION
   44           | EXPRESSION . OPERATOR_GE EXPRESSION
   44           | EXPRESSION OPERATOR_GE EXPRESSION .
   45           | EXPRESSION . OPERATOR_EQ EXPRESSION
   46           | EXPRESSION . OPERATOR_NE EXPRESSION
   47           | EXPRESSION . '<' EXPRESSION
   48           | EXPRESSION . '>' EXPRESSION

    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53

    OPERATOR_LE   error (nonassociative)
    OPERATOR_GE   error (nonassociative)
    OPERATOR_EQ   error (nonassociative)
    OPERATOR_NE   error (nonassociative)
    OPERATOR_AND  error (nonassociative)
    OPERATOR_OR   error (nonassociative)
    '<'           error (nonassociative)
    '>'           error (nonassociative)

    $default  reduce using rule 44 (EXPRESSION)


state 66

   36 EXPRESSION: EXPRESSION . '*' EXPRESSION
   37           | EXPRESSION . '+' EXPRESSION
   38           | EXPRESSION . '/' EXPRESSION
   39           | EXPRESSION . '-' EXPRESSION
   41           | EXPRESSION . OPERATOR_OR EXPRESSION
   42           | EXPRESSION . OPERATOR_AND EXPRESSION
   43           | EXPRESSION . OPERATOR_LE EXPRESSION
   44           | EXPRESSION . OPERATOR_GE EXPRESSION
   45           | EXPRESSION . OPERATOR_EQ EXPRESSION
   45           | EXPRESSION OPERATOR_EQ EXPRESSION .
   46           | EXPRESSION . OPERATOR_NE EXPRESSION
   47           | EXPRESSION . '<' EXPRESSION
   48           | EXPRESSION . '>' EXPRESSION

    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53

    OPERATOR_LE   error (nonassociative)
    OPERATOR_GE   error (nonassociative)
    OPERATOR_EQ   error (nonassociative)
    OPERATOR_NE   error (nonassociative)
    OPERATOR_AND  error (nonassociative)
    OPERATOR_OR   error (nonassociative)
    '<'           error (nonassociative)
    '>'           error (nonassociative)

    $default  reduce using rule 45 (EXPRESSION)


state 67

   36 EXPRESSION: EXPRESSION . '*' EXPRESSION
   37           | EXPRESSION . '+' EXPRESSION
   38           | EXPRESSION . '/' EXPRESSION
   39           | EXPRESSION . '-' EXPRESSION
   41           | EXPRESSION . OPERATOR_OR EXPRESSION
   42           | EXPRESSION . OPERATOR_AND EXPRESSION
   43           | EXPRESSION . OPERATOR_LE EXPRESSION
   44           | EXPRESSION . OPERATOR_GE EXPRESSION
   45           | EXPRESSION . OPERATOR_EQ EXPRESSION
   46           | EXPRESSION . OPERATOR_NE EXPRESSION
   46           | EXPRESSION OPERATOR_NE EXPRESSION .
   47           | EXPRESSION . '<' EXPRESSION
   48           | EXPRESSION . '>' EXPRESSION

    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53

    OPERATOR_LE   error (nonassociative)
    OPERATOR_GE   error (nonassociative)
    OPERATOR_EQ   error (nonassociative)
    OPERATOR_NE   error (nonassociative)
    OPERATOR_AND  error (nonassociative)
    OPERATOR_OR   error (nonassociative)
    '<'           error (nonassociative)
    '>'           error (nonassociative)

    $default  reduce using rule 46 (EXPRESSION)


state 68

   36 EXPRESSION: EXPRESSION . '*' EXPRESSION
   37           | EXPRESSION . '+' EXPRESSION
   38           | EXPRESSION . '/' EXPRESSION
   39           | EXPRESSION . '-' EXPRESSION
   41           | EXPRESSION . OPERATOR_OR EXPRESSION
   42           | EXPRESSION . OPERATOR_AND EXPRESSION
   42           | EXPRESSION OPERATOR_AND EXPRESSION .
   43           | EXPRESSION . OPERATOR_LE EXPRESSION
   44           | EXPRESSION . OPERATOR_GE EXPRESSION
   45           | EXPRESSION . OPERATOR_EQ EXPRESSION
   46           | EXPRESSION . OPERATOR_NE EXPRESSION
   47           | EXPRESSION . '<' EXPRESSION
   48           | EXPRESSION . '>' EXPRESSION

    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53

    OPERATOR_LE   error (nonassociative)
    OPERATOR_GE   error (nonassociative)
    OPERATOR_EQ   error (nonassociative)
    OPERATOR_NE   error (nonassociative)
    OPERATOR_AND  error (nonassociative)
    OPERATOR_OR   error (nonassociative)
    '<'           error (nonassociative)
    '>'           error (nonassociative)

    $default  reduce using rule 42 (EXPRESSION)


state 69

   36 EXPRESSION: EXPRESSION . '*' EXPRESSION
   37           | EXPRESSION . '+' EXPRESSION
   38           | EXPRESSION . '/' EXPRESSION
   39           | EXPRESSION . '-' EXPRESSION
   41           | EXPRESSION . OPERATOR_OR EXPRESSION
   41           | EXPRESSION OPERATOR_OR EXPRESSION .
   42           | EXPRESSION . OPERATOR_AND EXPRESSION
   43           | EXPRESSION . OPERATOR_LE EXPRESSION
   44           | EXPRESSION . OPERATOR_GE EXPRESSION
   45           | EXPRESSION . OPERATOR_EQ EXPRESSION
   46           | EXPRESSION . OPERATOR_NE EXPRESSION
   47           | EXPRESSION . '<' EXPRESSION
   48           | EXPRESSION . '>' EXPRESSION

    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53

    OPERATOR_LE   error (nonassociative)
    OPERATOR_GE   error (nonassociative)
    OPERATOR_EQ   error (nonassociative)
    OPERATOR_NE   error (nonassociative)
    OPERATOR_AND  error (nonassociative)
    OPERATOR_OR   error (nonassociative)
    '<'           error (nonassociative)
    '>'           error (nonassociative)

    $default  reduce using rule 41 (EXPRESSION)


state 70

   36 EXPRESSION: EXPRESSION . '*' EXPRESSION
   37           | EXPRESSION . '+' EXPRESSION
   38           | EXPRESSION . '/' EXPRESSION
   39           | EXPRESSION . '-' EXPRESSION
   41           | EXPRESSION . OPERATOR_OR EXPRESSION
   42           | EXPRESSION . OPERATOR_AND EXPRESSION
   43           | EXPRESSION . OPERATOR_LE EXPRESSION
   44           | EXPRESSION . OPERATOR_GE EXPRESSION
   45           | EXPRESSION . OPERATOR_EQ EXPRESSION
   46           | EXPRESSION . OPERATOR_NE EXPRESSION
   47           | EXPRESSION . '<' EXPRESSION
   47           | EXPRESSION '<' EXPRESSION .
   48           | EXPRESSION . '>' EXPRESSION

    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53

    OPERATOR_LE   error (nonassociative)
    OPERATOR_GE   error (nonassociative)
    OPERATOR_EQ   error (nonassociative)
    OPERATOR_NE   error (nonassociative)
    OPERATOR_AND  error (nonassociative)
    OPERATOR_OR   error (nonassociative)
    '<'           error (nonassociative)
    '>'           error (nonassociative)

    $default  reduce using rule 47 (EXPRESSION)


state 71

   36 EXPRESSION: EXPRESSION . '*' EXPRESSION
   37           | EXPRESSION . '+' EXPRESSION
   38           | EXPRESSION . '/' EXPRESSION
   39           | EXPRESSION . '-' EXPRESSION
   41           | EXPRESSION . OPERATOR_OR EXPRESSION
   42           | EXPRESSION . OPERATOR_AND EXPRESSION
   43           | EXPRESSION . OPERATOR_LE EXPRESSION
   44           | EXPRESSION . OPERATOR_GE EXPRESSION
   45           | EXPRESSION . OPERATOR_EQ EXPRESSION
   46           | EXPRESSION . OPERATOR_NE EXPRESSION
   47           | EXPRESSION . '<' EXPRESSION
   48           | EXPRESSION . '>' EXPRESSION
   48           | EXPRESSION '>' EXPRESSION .

    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53

    OPERATOR_LE   error (nonassociative)
    OPERATOR_GE   error (nonassociative)
    OPERATOR_EQ   error (nonassociative)
    OPERATOR_NE   error (nonassociative)
    OPERATOR_AND  error (nonassociative)
    OPERATOR_OR   error (nonassociative)
    '<'           error (nonassociative)
    '>'           error (nonassociative)

    $default  reduce using rule 48 (EXPRESSION)


state 72

   36 EXPRESSION: EXPRESSION . '*' EXPRESSION
   37           | EXPRESSION . '+' EXPRESSION
   37           | EXPRESSION '+' EXPRESSION .
   38           | EXPRESSION . '/' EXPRESSION
   39           | EXPRESSION . '-' EXPRESSION
   41           | EXPRESSION . OPERATOR_OR EXPRESSION
   42           | EXPRESSION . OPERATOR_AND EXPRESSION
   43           | EXPRESSION . OPERATOR_LE EXPRESSION
   44           | EXPRESSION . OPERATOR_GE EXPRESSION
   45           | EXPRESSION . OPERATOR_EQ EXPRESSION
   46           | EXPRESSION . OPERATOR_NE EXPRESSION
   47           | EXPRESSION . '<' EXPRESSION
   48           | EXPRESSION . '>' EXPRESSION

    '*'  shift, and go to state 52
    '/'  shift, and go to state 53

    $default  reduce using rule 37 (EXPRESSION)


state 73

   36 EXPRESSION: EXPRESSION . '*' EXPRESSION
   37           | EXPRESSION . '+' EXPRESSION
   38           | EXPRESSION . '/' EXPRESSION
   39           | EXPRESSION . '-' EXPRESSION
   39           | EXPRESSION '-' EXPRESSION .
   41           | EXPRESSION . OPERATOR_OR EXPRESSION
   42           | EXPRESSION . OPERATOR_AND EXPRESSION
   43           | EXPRESSION . OPERATOR_LE EXPRESSION
   44           | EXPRESSION . OPERATOR_GE EXPRESSION
   45           | EXPRESSION . OPERATOR_EQ EXPRESSION
   46           | EXPRESSION . OPERATOR_NE EXPRESSION
   47           | EXPRESSION . '<' EXPRESSION
   48           | EXPRESSION . '>' EXPRESSION

    '*'  shift, and go to state 52
    '/'  shift, and go to state 53

    $default  reduce using rule 39 (EXPRESSION)


state 74

   36 EXPRESSION: EXPRESSION . '*' EXPRESSION
   36           | EXPRESSION '*' EXPRESSION .
   37           | EXPRESSION . '+' EXPRESSION
   38           | EXPRESSION . '/' EXPRESSION
   39           | EXPRESSION . '-' EXPRESSION
   41           | EXPRESSION . OPERATOR_OR EXPRESSION
   42           | EXPRESSION . OPERATOR_AND EXPRESSION
   43           | EXPRESSION . OPERATOR_LE EXPRESSION
   44           | EXPRESSION . OPERATOR_GE EXPRESSION
   45           | EXPRESSION . OPERATOR_EQ EXPRESSION
   46           | EXPRESSION . OPERATOR_NE EXPRESSION
   47           | EXPRESSION . '<' EXPRESSION
   48           | EXPRESSION . '>' EXPRESSION

    $default  reduce using rule 36 (EXPRESSION)


state 75

   36 EXPRESSION: EXPRESSION . '*' EXPRESSION
   37           | EXPRESSION . '+' EXPRESSION
   38           | EXPRESSION . '/' EXPRESSION
   38           | EXPRESSION '/' EXPRESSION .
   39           | EXPRESSION . '-' EXPRESSION
   41           | EXPRESSION . OPERATOR_OR EXPRESSION
   42           | EXPRESSION . OPERATOR_AND EXPRESSION
   43           | EXPRESSION . OPERATOR_LE EXPRESSION
   44           | EXPRESSION . OPERATOR_GE EXPRESSION
   45           | EXPRESSION . OPERATOR_EQ EXPRESSION
   46           | EXPRESSION . OPERATOR_NE EXPRESSION
   47           | EXPRESSION . '<' EXPRESSION
   48           | EXPRESSION . '>' EXPRESSION

    $default  reduce using rule 38 (EXPRESSION)


state 76

   18 DECLARATION: TYPE IDENTIFIER '[' EXPRESSION ']' ':' . LIST ';'

    LIT_INTEGER  shift, and go to state 20
    LIT_FALSE    shift, and go to state 21
    LIT_TRUE     shift, and go to state 22
    LIT_CHAR     shift, and go to state 23
    LIT_STRING   shift, and go to state 24

    $default  reduce using rule 6 (LIST)

    LIST     go to state 87
    LITERAL  go to state 88


state 77

   19 DECLARATION: TYPE IDENTIFIER '[' EXPRESSION ']' ';' .

    $default  reduce using rule 19 (DECLARATION)


state 78

   21 DECLARATION_WO_VEC: TYPE '$' . IDENTIFIER ':' LITERAL ';' DECLARATION_WO_VEC

    TK_IDENTIFIER  shift, and go to state 10

    IDENTIFIER  go to state 89


state 79

   20 DECLARATION_WO_VEC: TYPE IDENTIFIER . ':' LITERAL ';' DECLARATION_WO_VEC

    ':'  shift, and go to state 90


state 80

   49 BLOCK: '{' . CMD_SEQ '}'

    KW_IF          shift, and go to state 91
    KW_LOOP        shift, and go to state 92
    KW_INPUT       shift, and go to state 93
    KW_RETURN      shift, and go to state 94
    KW_OUTPUT      shift, and go to state 95
    TK_IDENTIFIER  shift, and go to state 10
    '*'            shift, and go to state 96
    '{'            shift, and go to state 80

    $default  reduce using rule 63 (CMD_SEQ)

    IDENTIFIER  go to state 97
    BLOCK       go to state 98
    CMD         go to state 99
    CMD_SEQ     go to state 100


state 81

   24 FUNC_DECLARATION: TYPE IDENTIFIER '(' ')' DECLARATION_WO_VEC BLOCK .

    $default  reduce using rule 24 (FUNC_DECLARATION)


state 82

   26 ARGUMENTS: TYPE IDENTIFIER ',' . ARGUMENTS

    KW_WORD  shift, and go to state 1
    KW_BOOL  shift, and go to state 2
    KW_BYTE  shift, and go to state 3

    TYPE       go to state 33
    ARGUMENTS  go to state 101


state 83

   23 FUNC_DECLARATION: TYPE IDENTIFIER '(' ARGUMENTS ')' DECLARATION_WO_VEC . BLOCK

    '{'  shift, and go to state 80

    BLOCK  go to state 102


state 84

   31 EXPRESSION: IDENTIFIER '[' EXPRESSION ']' .

    $default  reduce using rule 31 (EXPRESSION)


state 85

   40 EXPRESSION: IDENTIFIER '(' ARGUMENTS_CALL ')' .

    $default  reduce using rule 40 (EXPRESSION)


state 86

   28 ARGUMENTS_CALL: EXPRESSION ',' . ARGUMENTS_CALL

    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '*'            shift, and go to state 26
    '('            shift, and go to state 27
    '&'            shift, and go to state 28

    $default  reduce using rule 29 (ARGUMENTS_CALL)

    IDENTIFIER      go to state 29
    LITERAL         go to state 30
    ARGUMENTS_CALL  go to state 103
    EXPRESSION      go to state 63


state 87

   18 DECLARATION: TYPE IDENTIFIER '[' EXPRESSION ']' ':' LIST . ';'

    ';'  shift, and go to state 104


state 88

    5 LIST: LITERAL . LIST

    LIT_INTEGER  shift, and go to state 20
    LIT_FALSE    shift, and go to state 21
    LIT_TRUE     shift, and go to state 22
    LIT_CHAR     shift, and go to state 23
    LIT_STRING   shift, and go to state 24

    $default  reduce using rule 6 (LIST)

    LIST     go to state 105
    LITERAL  go to state 88


state 89

   21 DECLARATION_WO_VEC: TYPE '$' IDENTIFIER . ':' LITERAL ';' DECLARATION_WO_VEC

    ':'  shift, and go to state 106


state 90

   20 DECLARATION_WO_VEC: TYPE IDENTIFIER ':' . LITERAL ';' DECLARATION_WO_VEC

    LIT_INTEGER  shift, and go to state 20
    LIT_FALSE    shift, and go to state 21
    LIT_TRUE     shift, and go to state 22
    LIT_CHAR     shift, and go to state 23
    LIT_STRING   shift, and go to state 24

    LITERAL  go to state 107


state 91

   59 CMD: KW_IF . '(' EXPRESSION ')' KW_THEN CMD
   60    | KW_IF . '(' EXPRESSION ')' KW_THEN CMD KW_ELSE CMD

    '('  shift, and go to state 108


state 92

   61 CMD: KW_LOOP . '(' EXPRESSION ')' CMD

    '('  shift, and go to state 109


state 93

   55 CMD: KW_INPUT . IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 10

    IDENTIFIER  go to state 110


state 94

   57 CMD: KW_RETURN . EXPRESSION

    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '*'            shift, and go to state 26
    '('            shift, and go to state 27
    '&'            shift, and go to state 28

    IDENTIFIER  go to state 29
    LITERAL     go to state 30
    EXPRESSION  go to state 111


state 95

   56 CMD: KW_OUTPUT . OUTPUT

    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '*'            shift, and go to state 26
    '('            shift, and go to state 27
    '&'            shift, and go to state 28

    IDENTIFIER  go to state 29
    LITERAL     go to state 30
    EXPRESSION  go to state 112
    OUTPUT      go to state 113


state 96

   54 CMD: '*' . IDENTIFIER '=' EXPRESSION

    TK_IDENTIFIER  shift, and go to state 10

    IDENTIFIER  go to state 114


state 97

   52 CMD: IDENTIFIER . '=' EXPRESSION
   53    | IDENTIFIER . '[' EXPRESSION ']' '=' EXPRESSION

    '['  shift, and go to state 115
    '='  shift, and go to state 116


state 98

   58 CMD: BLOCK .

    $default  reduce using rule 58 (CMD)


state 99

   62 CMD_SEQ: CMD . ';' CMD_SEQ

    ';'  shift, and go to state 117


state 100

   49 BLOCK: '{' CMD_SEQ . '}'

    '}'  shift, and go to state 118


state 101

   26 ARGUMENTS: TYPE IDENTIFIER ',' ARGUMENTS .

    $default  reduce using rule 26 (ARGUMENTS)


state 102

   23 FUNC_DECLARATION: TYPE IDENTIFIER '(' ARGUMENTS ')' DECLARATION_WO_VEC BLOCK .

    $default  reduce using rule 23 (FUNC_DECLARATION)


state 103

   28 ARGUMENTS_CALL: EXPRESSION ',' ARGUMENTS_CALL .

    $default  reduce using rule 28 (ARGUMENTS_CALL)


state 104

   18 DECLARATION: TYPE IDENTIFIER '[' EXPRESSION ']' ':' LIST ';' .

    $default  reduce using rule 18 (DECLARATION)


state 105

    5 LIST: LITERAL LIST .

    $default  reduce using rule 5 (LIST)


state 106

   21 DECLARATION_WO_VEC: TYPE '$' IDENTIFIER ':' . LITERAL ';' DECLARATION_WO_VEC

    LIT_INTEGER  shift, and go to state 20
    LIT_FALSE    shift, and go to state 21
    LIT_TRUE     shift, and go to state 22
    LIT_CHAR     shift, and go to state 23
    LIT_STRING   shift, and go to state 24

    LITERAL  go to state 119


state 107

   20 DECLARATION_WO_VEC: TYPE IDENTIFIER ':' LITERAL . ';' DECLARATION_WO_VEC

    ';'  shift, and go to state 120


state 108

   59 CMD: KW_IF '(' . EXPRESSION ')' KW_THEN CMD
   60    | KW_IF '(' . EXPRESSION ')' KW_THEN CMD KW_ELSE CMD

    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '*'            shift, and go to state 26
    '('            shift, and go to state 27
    '&'            shift, and go to state 28

    IDENTIFIER  go to state 29
    LITERAL     go to state 30
    EXPRESSION  go to state 121


state 109

   61 CMD: KW_LOOP '(' . EXPRESSION ')' CMD

    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '*'            shift, and go to state 26
    '('            shift, and go to state 27
    '&'            shift, and go to state 28

    IDENTIFIER  go to state 29
    LITERAL     go to state 30
    EXPRESSION  go to state 122


state 110

   55 CMD: KW_INPUT IDENTIFIER .

    $default  reduce using rule 55 (CMD)


state 111

   36 EXPRESSION: EXPRESSION . '*' EXPRESSION
   37           | EXPRESSION . '+' EXPRESSION
   38           | EXPRESSION . '/' EXPRESSION
   39           | EXPRESSION . '-' EXPRESSION
   41           | EXPRESSION . OPERATOR_OR EXPRESSION
   42           | EXPRESSION . OPERATOR_AND EXPRESSION
   43           | EXPRESSION . OPERATOR_LE EXPRESSION
   44           | EXPRESSION . OPERATOR_GE EXPRESSION
   45           | EXPRESSION . OPERATOR_EQ EXPRESSION
   46           | EXPRESSION . OPERATOR_NE EXPRESSION
   47           | EXPRESSION . '<' EXPRESSION
   48           | EXPRESSION . '>' EXPRESSION
   57 CMD: KW_RETURN EXPRESSION .

    OPERATOR_LE   shift, and go to state 42
    OPERATOR_GE   shift, and go to state 43
    OPERATOR_EQ   shift, and go to state 44
    OPERATOR_NE   shift, and go to state 45
    OPERATOR_AND  shift, and go to state 46
    OPERATOR_OR   shift, and go to state 47
    '<'           shift, and go to state 48
    '>'           shift, and go to state 49
    '+'           shift, and go to state 50
    '-'           shift, and go to state 51
    '*'           shift, and go to state 52
    '/'           shift, and go to state 53

    $default  reduce using rule 57 (CMD)


state 112

   36 EXPRESSION: EXPRESSION . '*' EXPRESSION
   37           | EXPRESSION . '+' EXPRESSION
   38           | EXPRESSION . '/' EXPRESSION
   39           | EXPRESSION . '-' EXPRESSION
   41           | EXPRESSION . OPERATOR_OR EXPRESSION
   42           | EXPRESSION . OPERATOR_AND EXPRESSION
   43           | EXPRESSION . OPERATOR_LE EXPRESSION
   44           | EXPRESSION . OPERATOR_GE EXPRESSION
   45           | EXPRESSION . OPERATOR_EQ EXPRESSION
   46           | EXPRESSION . OPERATOR_NE EXPRESSION
   47           | EXPRESSION . '<' EXPRESSION
   48           | EXPRESSION . '>' EXPRESSION
   50 OUTPUT: EXPRESSION .
   51       | EXPRESSION . ',' OUTPUT

    OPERATOR_LE   shift, and go to state 42
    OPERATOR_GE   shift, and go to state 43
    OPERATOR_EQ   shift, and go to state 44
    OPERATOR_NE   shift, and go to state 45
    OPERATOR_AND  shift, and go to state 46
    OPERATOR_OR   shift, and go to state 47
    '<'           shift, and go to state 48
    '>'           shift, and go to state 49
    '+'           shift, and go to state 50
    '-'           shift, and go to state 51
    '*'           shift, and go to state 52
    '/'           shift, and go to state 53
    ','           shift, and go to state 123

    $default  reduce using rule 50 (OUTPUT)


state 113

   56 CMD: KW_OUTPUT OUTPUT .

    $default  reduce using rule 56 (CMD)


state 114

   54 CMD: '*' IDENTIFIER . '=' EXPRESSION

    '='  shift, and go to state 124


state 115

   53 CMD: IDENTIFIER '[' . EXPRESSION ']' '=' EXPRESSION

    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '*'            shift, and go to state 26
    '('            shift, and go to state 27
    '&'            shift, and go to state 28

    IDENTIFIER  go to state 29
    LITERAL     go to state 30
    EXPRESSION  go to state 125


state 116

   52 CMD: IDENTIFIER '=' . EXPRESSION

    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '*'            shift, and go to state 26
    '('            shift, and go to state 27
    '&'            shift, and go to state 28

    IDENTIFIER  go to state 29
    LITERAL     go to state 30
    EXPRESSION  go to state 126


state 117

   62 CMD_SEQ: CMD ';' . CMD_SEQ

    KW_IF          shift, and go to state 91
    KW_LOOP        shift, and go to state 92
    KW_INPUT       shift, and go to state 93
    KW_RETURN      shift, and go to state 94
    KW_OUTPUT      shift, and go to state 95
    TK_IDENTIFIER  shift, and go to state 10
    '*'            shift, and go to state 96
    '{'            shift, and go to state 80

    $default  reduce using rule 63 (CMD_SEQ)

    IDENTIFIER  go to state 97
    BLOCK       go to state 98
    CMD         go to state 99
    CMD_SEQ     go to state 127


state 118

   49 BLOCK: '{' CMD_SEQ '}' .

    $default  reduce using rule 49 (BLOCK)


state 119

   21 DECLARATION_WO_VEC: TYPE '$' IDENTIFIER ':' LITERAL . ';' DECLARATION_WO_VEC

    ';'  shift, and go to state 128


state 120

   20 DECLARATION_WO_VEC: TYPE IDENTIFIER ':' LITERAL ';' . DECLARATION_WO_VEC

    KW_WORD  shift, and go to state 1
    KW_BOOL  shift, and go to state 2
    KW_BYTE  shift, and go to state 3

    $default  reduce using rule 22 (DECLARATION_WO_VEC)

    TYPE                go to state 55
    DECLARATION_WO_VEC  go to state 129


state 121

   36 EXPRESSION: EXPRESSION . '*' EXPRESSION
   37           | EXPRESSION . '+' EXPRESSION
   38           | EXPRESSION . '/' EXPRESSION
   39           | EXPRESSION . '-' EXPRESSION
   41           | EXPRESSION . OPERATOR_OR EXPRESSION
   42           | EXPRESSION . OPERATOR_AND EXPRESSION
   43           | EXPRESSION . OPERATOR_LE EXPRESSION
   44           | EXPRESSION . OPERATOR_GE EXPRESSION
   45           | EXPRESSION . OPERATOR_EQ EXPRESSION
   46           | EXPRESSION . OPERATOR_NE EXPRESSION
   47           | EXPRESSION . '<' EXPRESSION
   48           | EXPRESSION . '>' EXPRESSION
   59 CMD: KW_IF '(' EXPRESSION . ')' KW_THEN CMD
   60    | KW_IF '(' EXPRESSION . ')' KW_THEN CMD KW_ELSE CMD

    OPERATOR_LE   shift, and go to state 42
    OPERATOR_GE   shift, and go to state 43
    OPERATOR_EQ   shift, and go to state 44
    OPERATOR_NE   shift, and go to state 45
    OPERATOR_AND  shift, and go to state 46
    OPERATOR_OR   shift, and go to state 47
    '<'           shift, and go to state 48
    '>'           shift, and go to state 49
    '+'           shift, and go to state 50
    '-'           shift, and go to state 51
    '*'           shift, and go to state 52
    '/'           shift, and go to state 53
    ')'           shift, and go to state 130


state 122

   36 EXPRESSION: EXPRESSION . '*' EXPRESSION
   37           | EXPRESSION . '+' EXPRESSION
   38           | EXPRESSION . '/' EXPRESSION
   39           | EXPRESSION . '-' EXPRESSION
   41           | EXPRESSION . OPERATOR_OR EXPRESSION
   42           | EXPRESSION . OPERATOR_AND EXPRESSION
   43           | EXPRESSION . OPERATOR_LE EXPRESSION
   44           | EXPRESSION . OPERATOR_GE EXPRESSION
   45           | EXPRESSION . OPERATOR_EQ EXPRESSION
   46           | EXPRESSION . OPERATOR_NE EXPRESSION
   47           | EXPRESSION . '<' EXPRESSION
   48           | EXPRESSION . '>' EXPRESSION
   61 CMD: KW_LOOP '(' EXPRESSION . ')' CMD

    OPERATOR_LE   shift, and go to state 42
    OPERATOR_GE   shift, and go to state 43
    OPERATOR_EQ   shift, and go to state 44
    OPERATOR_NE   shift, and go to state 45
    OPERATOR_AND  shift, and go to state 46
    OPERATOR_OR   shift, and go to state 47
    '<'           shift, and go to state 48
    '>'           shift, and go to state 49
    '+'           shift, and go to state 50
    '-'           shift, and go to state 51
    '*'           shift, and go to state 52
    '/'           shift, and go to state 53
    ')'           shift, and go to state 131


state 123

   51 OUTPUT: EXPRESSION ',' . OUTPUT

    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '*'            shift, and go to state 26
    '('            shift, and go to state 27
    '&'            shift, and go to state 28

    IDENTIFIER  go to state 29
    LITERAL     go to state 30
    EXPRESSION  go to state 112
    OUTPUT      go to state 132


state 124

   54 CMD: '*' IDENTIFIER '=' . EXPRESSION

    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '*'            shift, and go to state 26
    '('            shift, and go to state 27
    '&'            shift, and go to state 28

    IDENTIFIER  go to state 29
    LITERAL     go to state 30
    EXPRESSION  go to state 133


state 125

   36 EXPRESSION: EXPRESSION . '*' EXPRESSION
   37           | EXPRESSION . '+' EXPRESSION
   38           | EXPRESSION . '/' EXPRESSION
   39           | EXPRESSION . '-' EXPRESSION
   41           | EXPRESSION . OPERATOR_OR EXPRESSION
   42           | EXPRESSION . OPERATOR_AND EXPRESSION
   43           | EXPRESSION . OPERATOR_LE EXPRESSION
   44           | EXPRESSION . OPERATOR_GE EXPRESSION
   45           | EXPRESSION . OPERATOR_EQ EXPRESSION
   46           | EXPRESSION . OPERATOR_NE EXPRESSION
   47           | EXPRESSION . '<' EXPRESSION
   48           | EXPRESSION . '>' EXPRESSION
   53 CMD: IDENTIFIER '[' EXPRESSION . ']' '=' EXPRESSION

    OPERATOR_LE   shift, and go to state 42
    OPERATOR_GE   shift, and go to state 43
    OPERATOR_EQ   shift, and go to state 44
    OPERATOR_NE   shift, and go to state 45
    OPERATOR_AND  shift, and go to state 46
    OPERATOR_OR   shift, and go to state 47
    '<'           shift, and go to state 48
    '>'           shift, and go to state 49
    '+'           shift, and go to state 50
    '-'           shift, and go to state 51
    '*'           shift, and go to state 52
    '/'           shift, and go to state 53
    ']'           shift, and go to state 134


state 126

   36 EXPRESSION: EXPRESSION . '*' EXPRESSION
   37           | EXPRESSION . '+' EXPRESSION
   38           | EXPRESSION . '/' EXPRESSION
   39           | EXPRESSION . '-' EXPRESSION
   41           | EXPRESSION . OPERATOR_OR EXPRESSION
   42           | EXPRESSION . OPERATOR_AND EXPRESSION
   43           | EXPRESSION . OPERATOR_LE EXPRESSION
   44           | EXPRESSION . OPERATOR_GE EXPRESSION
   45           | EXPRESSION . OPERATOR_EQ EXPRESSION
   46           | EXPRESSION . OPERATOR_NE EXPRESSION
   47           | EXPRESSION . '<' EXPRESSION
   48           | EXPRESSION . '>' EXPRESSION
   52 CMD: IDENTIFIER '=' EXPRESSION .

    OPERATOR_LE   shift, and go to state 42
    OPERATOR_GE   shift, and go to state 43
    OPERATOR_EQ   shift, and go to state 44
    OPERATOR_NE   shift, and go to state 45
    OPERATOR_AND  shift, and go to state 46
    OPERATOR_OR   shift, and go to state 47
    '<'           shift, and go to state 48
    '>'           shift, and go to state 49
    '+'           shift, and go to state 50
    '-'           shift, and go to state 51
    '*'           shift, and go to state 52
    '/'           shift, and go to state 53

    $default  reduce using rule 52 (CMD)


state 127

   62 CMD_SEQ: CMD ';' CMD_SEQ .

    $default  reduce using rule 62 (CMD_SEQ)


state 128

   21 DECLARATION_WO_VEC: TYPE '$' IDENTIFIER ':' LITERAL ';' . DECLARATION_WO_VEC

    KW_WORD  shift, and go to state 1
    KW_BOOL  shift, and go to state 2
    KW_BYTE  shift, and go to state 3

    $default  reduce using rule 22 (DECLARATION_WO_VEC)

    TYPE                go to state 55
    DECLARATION_WO_VEC  go to state 135


state 129

   20 DECLARATION_WO_VEC: TYPE IDENTIFIER ':' LITERAL ';' DECLARATION_WO_VEC .

    $default  reduce using rule 20 (DECLARATION_WO_VEC)


state 130

   59 CMD: KW_IF '(' EXPRESSION ')' . KW_THEN CMD
   60    | KW_IF '(' EXPRESSION ')' . KW_THEN CMD KW_ELSE CMD

    KW_THEN  shift, and go to state 136


state 131

   61 CMD: KW_LOOP '(' EXPRESSION ')' . CMD

    KW_IF          shift, and go to state 91
    KW_LOOP        shift, and go to state 92
    KW_INPUT       shift, and go to state 93
    KW_RETURN      shift, and go to state 94
    KW_OUTPUT      shift, and go to state 95
    TK_IDENTIFIER  shift, and go to state 10
    '*'            shift, and go to state 96
    '{'            shift, and go to state 80

    IDENTIFIER  go to state 97
    BLOCK       go to state 98
    CMD         go to state 137


state 132

   51 OUTPUT: EXPRESSION ',' OUTPUT .

    $default  reduce using rule 51 (OUTPUT)


state 133

   36 EXPRESSION: EXPRESSION . '*' EXPRESSION
   37           | EXPRESSION . '+' EXPRESSION
   38           | EXPRESSION . '/' EXPRESSION
   39           | EXPRESSION . '-' EXPRESSION
   41           | EXPRESSION . OPERATOR_OR EXPRESSION
   42           | EXPRESSION . OPERATOR_AND EXPRESSION
   43           | EXPRESSION . OPERATOR_LE EXPRESSION
   44           | EXPRESSION . OPERATOR_GE EXPRESSION
   45           | EXPRESSION . OPERATOR_EQ EXPRESSION
   46           | EXPRESSION . OPERATOR_NE EXPRESSION
   47           | EXPRESSION . '<' EXPRESSION
   48           | EXPRESSION . '>' EXPRESSION
   54 CMD: '*' IDENTIFIER '=' EXPRESSION .

    OPERATOR_LE   shift, and go to state 42
    OPERATOR_GE   shift, and go to state 43
    OPERATOR_EQ   shift, and go to state 44
    OPERATOR_NE   shift, and go to state 45
    OPERATOR_AND  shift, and go to state 46
    OPERATOR_OR   shift, and go to state 47
    '<'           shift, and go to state 48
    '>'           shift, and go to state 49
    '+'           shift, and go to state 50
    '-'           shift, and go to state 51
    '*'           shift, and go to state 52
    '/'           shift, and go to state 53

    $default  reduce using rule 54 (CMD)


state 134

   53 CMD: IDENTIFIER '[' EXPRESSION ']' . '=' EXPRESSION

    '='  shift, and go to state 138


state 135

   21 DECLARATION_WO_VEC: TYPE '$' IDENTIFIER ':' LITERAL ';' DECLARATION_WO_VEC .

    $default  reduce using rule 21 (DECLARATION_WO_VEC)


state 136

   59 CMD: KW_IF '(' EXPRESSION ')' KW_THEN . CMD
   60    | KW_IF '(' EXPRESSION ')' KW_THEN . CMD KW_ELSE CMD

    KW_IF          shift, and go to state 91
    KW_LOOP        shift, and go to state 92
    KW_INPUT       shift, and go to state 93
    KW_RETURN      shift, and go to state 94
    KW_OUTPUT      shift, and go to state 95
    TK_IDENTIFIER  shift, and go to state 10
    '*'            shift, and go to state 96
    '{'            shift, and go to state 80

    IDENTIFIER  go to state 97
    BLOCK       go to state 98
    CMD         go to state 139


state 137

   61 CMD: KW_LOOP '(' EXPRESSION ')' CMD .

    $default  reduce using rule 61 (CMD)


state 138

   53 CMD: IDENTIFIER '[' EXPRESSION ']' '=' . EXPRESSION

    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '*'            shift, and go to state 26
    '('            shift, and go to state 27
    '&'            shift, and go to state 28

    IDENTIFIER  go to state 29
    LITERAL     go to state 30
    EXPRESSION  go to state 140


state 139

   59 CMD: KW_IF '(' EXPRESSION ')' KW_THEN CMD .
   60    | KW_IF '(' EXPRESSION ')' KW_THEN CMD . KW_ELSE CMD

    KW_ELSE  shift, and go to state 141

    $default  reduce using rule 59 (CMD)


state 140

   36 EXPRESSION: EXPRESSION . '*' EXPRESSION
   37           | EXPRESSION . '+' EXPRESSION
   38           | EXPRESSION . '/' EXPRESSION
   39           | EXPRESSION . '-' EXPRESSION
   41           | EXPRESSION . OPERATOR_OR EXPRESSION
   42           | EXPRESSION . OPERATOR_AND EXPRESSION
   43           | EXPRESSION . OPERATOR_LE EXPRESSION
   44           | EXPRESSION . OPERATOR_GE EXPRESSION
   45           | EXPRESSION . OPERATOR_EQ EXPRESSION
   46           | EXPRESSION . OPERATOR_NE EXPRESSION
   47           | EXPRESSION . '<' EXPRESSION
   48           | EXPRESSION . '>' EXPRESSION
   53 CMD: IDENTIFIER '[' EXPRESSION ']' '=' EXPRESSION .

    OPERATOR_LE   shift, and go to state 42
    OPERATOR_GE   shift, and go to state 43
    OPERATOR_EQ   shift, and go to state 44
    OPERATOR_NE   shift, and go to state 45
    OPERATOR_AND  shift, and go to state 46
    OPERATOR_OR   shift, and go to state 47
    '<'           shift, and go to state 48
    '>'           shift, and go to state 49
    '+'           shift, and go to state 50
    '-'           shift, and go to state 51
    '*'           shift, and go to state 52
    '/'           shift, and go to state 53

    $default  reduce using rule 53 (CMD)


state 141

   60 CMD: KW_IF '(' EXPRESSION ')' KW_THEN CMD KW_ELSE . CMD

    KW_IF          shift, and go to state 91
    KW_LOOP        shift, and go to state 92
    KW_INPUT       shift, and go to state 93
    KW_RETURN      shift, and go to state 94
    KW_OUTPUT      shift, and go to state 95
    TK_IDENTIFIER  shift, and go to state 10
    '*'            shift, and go to state 96
    '{'            shift, and go to state 80

    IDENTIFIER  go to state 97
    BLOCK       go to state 98
    CMD         go to state 142


state 142

   60 CMD: KW_IF '(' EXPRESSION ')' KW_THEN CMD KW_ELSE CMD .

    $default  reduce using rule 60 (CMD)
